(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 17])
(wtc)
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 18])
(wtc)
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 19])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 191])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 192])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 193])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 194])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 195])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 197])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 198])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 199])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 200])
(wtc)
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 201])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 202])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 203])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 204])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 205])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 206])
(wtc)
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 667])
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 777])
(wtc)
(rete/assert-frame ['Test 'id "-33" 'param :speed 'value 779])
(load-file "src/clj/rete4flight/core.clj")
(wtc)
(set-param! "-233" nil [0 0  0 0 0 0 0 0])
(rete/assert-frame ['Test 'id "-44" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(rete/assert-frame ['Test 'id "-44" 'param :speed 'value 22])
(rete/assert-frame ['Test 'id "-44" 'param :speed 'value 55])
(load-file "src/clj/rete4flight/core.clj")
(rete/assert-frame ['Test 'id "-44" 'param :speed 'value 57])
(load-file "src/clj/rete4flight/core.clj")
(rete/assert-frame ['Test 'id "-44" 'param :speed 'value 58])
(start-server)
(wtc)
(rete/assert-frame ['Test 'id "-44" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(rete/assert-frame ['Test 'id "-44" 'param :speed 'value 58])
(rete/assert-frame ['Test 'id "-44" 'param :speed 'value 59])
@FRS
(keys (:all @FRS))
(rete/assert-frame ['Test 'id "-445" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(keys (:all @FRS))
(rete/assert-frame ['Test 'id "-44" 'param :speed 'value 59])
(keys (:all @FRS))
((:all @FRS) "-445")
(rete/assert-frame ['Test 'id "-445" 'param :speed 'value 859])
((:all @FRS) "-445")
(start-server)
(wtc)
(rete/assert-frame ['Test 'id "-888" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(rete/assert-frame ['Test 'id "-888" 'param :speed 'value 1111])
(keys (:all @FRS))
(rete/assert-frame ['Test 'id "-121" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(keys (:all @FRS))
(rete/assert-frame ['Test 'id "-163" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(keys (:all @FRS))
(wtc)
(rete/assert-frame ['Test 'id "-5000" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(wtc)
(rete/assert-frame ['Test 'id "-5001" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(wtc)
(rete/assert-frame ['Test 'id "-5002" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(rete/assert-frame ['Test 'id "-5002" 'param :speed 'value 1111])
(es)
(rete/assert-frame ['Test 'id "-5002" 'param nil 'value [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]])
(rete/fire)
(rete/assert-frame ['Test 'id "-5002" 'param :speed 'value 1111])
(rete/fire)
(:all @FRS)
(get nil :a)
(load-file "src/clj/rete4flight/core.clj")
(rete/assert-frame ['Test 'id "-5002" 'param :speed 'value 1111])
(rete/fire)
(es)
@MYFS
(rete/assert-frame ['Test 'id "-5002" 'param :speed 'value 1111])
(rete/fire)
@MYFS
(speed "-5002")
(rete/assert-frame ['Test 'id "-5002" 'param :speed 'value 2222])
(rete/fire)
(start-server)
(wtc)
(tst 0 16 53)
(rete/facts)
(wtc)
(tst 1 17 20)
(rand)
(def x 3)
-x
(start-server)
(wtc)
(tst 0 23 12)
(wtc)
(tst 1 23 32)
(wtc)
(start-server)
(stop-server)
(start-server)
(stop-server)
(start-server)
(load-file "src/clj/rete4flight/core.clj")
(wtc)
(- 360 283.19)
(- 360 283)
(start-server)
@MYFS
(course "-1")
@MYFS
(rete/facts)
(wtc)
(tst 0 16 52)
(wtc)
(tst 7777 17 18)
(rete/facts)
(wtc)
(tst 5555 17 24)
(wtc)
(defn tabfun [x table]
    ;; left and right borders in table are exclusive
    (let [[lo hi] (split-with #(< (first %) x) table)]
      (if (seq lo)
        (if (seq hi)
          (linint x (last lo) (first hi))
          [:RB (second (last table))])
        [:LB (second (first lo))])))
(defn linint [x [x1 y1] [x2 y2]]
    (float (+ y1 (/ (* (- y2 y1) (- x x1)) (- x2 x1)))))
(defn tabfun [x table]
    ;; left and right borders in table are exclusive
    (let [[lo hi] (split-with #(< (first %) x) table)]
      (if (seq lo)
        (if (seq hi)
          (linint x (last lo) (first hi))
          [:RB (second (last table))])
        [:LB (second (first lo))])))
(tabfun 5 [[125 33000][0 0]])
(tabfun 5 [[0 0][125 33000][0 0]])
(tabfun 5 [[0 0][125 33000]])
(tabfun 15 [[0 0][125 33000]])
(tabfun 115 [[0 0][125 33000]])
(wtc)
(tst 8888 17 55)
(start-server)
(wtc)
(tst 0 18 48)
(tst 9 19 15)
(tst 10 19 16)
(start-server)
(wtc)
(tst 0 22 31)
(load-file "src/clj/rete4flight/core.clj")
(wtc)
(start-server)
(wtc)
(tst 0 11 27)
(start-server)
(wtc)
(tst 0 13 30)
(rete/facts)
(start-server)
(tst 0 21 26)
(rete/facts)
@MYFS
(geo/bear-deg 58.2 22.9 58.8 22.98)
(geo/course-angle 345 58.6 22.8 59.3 23.3)
(geo/course-angle 120 58.6 22.8 59.3 23.3)
(geo/bear-deg  58.6 22.8 59.3 23.3)
(- (geo/bear-deg  58.6 22.8 59.3 23.3) 120)
(start-server)
(tst 0 23 00)
(start-server)
(rete/facts)
(start-server)
(rete/bnf)
(rete/bnp)
(rete/log-lst "beta-net-plan.txt" rete/BPLAN)
(rete/facts)
(start-server)
(rete/log-lst "beta-net-plan.txt" rete/BPLAN)
(stop-server)
(start-server)
(rete/facts)
(stop-server)
(start-server)
(tst 0 17 28)
(rete/facts)
(stop-server)
(start-server)
(kt 0 18 20)
(kk 0 18 21)
(stop-server)
(start-server)
(all)
(rete/facts)
(load-file "str/clj/rete4flight/core.clj")
(load-file "src/clj/rete4flight/core.clj")
(all)
(kk 0 18 21)
(stop-server)
(start-server)
(all)
(rete/facts)
(all)
(rete/facts)
(load-file "src/clj/rete4flight/core.clj")
(all)
(rete/facts)
(start-server)
(info "8ffc202")
(kt 0 21 55)
(kk 0
)
(kk 0 21 56)
(info "8ffc202")
(load-file "src/clj/rete4flight/core.clj")
(kk 1 22 55)
(def as (:airports "FRS))
"))
(def as (:airports @FRS))
(count as)
(first as)
(load-file "src/clj/rete4flight/core.clj")
(kk 2 22 55)
(load-file "src/clj/rete4flight/core.clj")
(kk 3 22 55)
(load-file "src/clj/rete4flight/core.clj")
(kk 4 23 31)
(start-server)
(kk 4 12 53)
(start-server)
(add-my-flight "RU5" [58.0 22.87] 45 455 29000)
(bank "-1" 0)
(bank "-1" 220)
(start-server)
(add-my-flight "RU5" [58.0 22.87] 45 455 29000)
(bank "-1" 220)
(bank "-1" 270)
(load-file "src/clj/rete4flight/core.clj")
(bank "-1" 100)
(add-my-flight "RU5" [58.0 22.87] 45 455 29000)
(bank "-1" 100)
(bank "-1" 270)
(load-file "src/clj/rete4flight/core.clj")
(add-my-flight "RU5" [58.0 22.87] 45 455 29000)
(plane-move "-1" 0.1)
(bank "-1" 270)
(bank "-1" 0)
(load-file "src/clj/rete4flight/core.clj")
(add-my-flight "RU6" [58.0 22.87] 45 455 29000)
(plane-move "-1" 0.1)
(start-server)
(add-my-flight "RU6" [58.0 22.87] 45 455 29000)
(plane-move "-1" 0.1)
(start-server)
(add-my-flight "RU6" [58.0 22.87] 45 455 29000)
(plane-move "-1" 0.1)
(bank "-1" 270)
(bank "-1" 0)
(start-server)
(add-my-flight "RU6" [58.0 22.87] 45 455 29000)
(bank "-1" 270)
(plane-move "-1" 0.1)
(bank "-1" 0)
(kk 0 12 12)
(kt 0 12 14)
(rete/facts)
(add-my-flight "RU7" [58.0 22.87] 0 0 0)
(set-param! "-4" :speed 1000)
(plane-move "-4" 0.01)
(plane-move "-3" 0.01)
(plane-move "-2" 0.01)
(kt 1 12 35)
(plane-move "-5" 2.2)
(rete/facts 'Flight)
(exit)
(start-server)
(kt 0 12 44)
(plane-move "-1" 2.2)
(kt 1 12 49)
(exit)
(start-server)
(kt 0 12 55)
(plane-move "-1" 0.1)
(start-server)
(kt 0 13 01)
(kt 1 13 2)
(plane-move "-2" 2.2)
(start-server)
(kt 1 13 12)
(kk 1 13 14)
(kk 2 13 18)
(load-file "src/clj/rete4flight/core.clj")
(kk 3 13 23)
(load-file "src/clj/rete4flight/core.clj")
(rete/facts)
(exit)
(start-server)
(kk 0 13 29)
(load-file "src/clj/rete4flight/core.clj")
(exit)
(start-server)
(kk 0 13 35)
(add-my-flight "RU7" [58.0 22.87] 0 0 0)
(plane-move "-2" 0.1)
(set-param! "-2" :speed 1000)
(bank "-2" 180)
(bank "-2" 10)
(bank "-2" 190)
(bank "-2" 10)
(exit)
(start-server)
(kk 0 13 55)
(add-my-flight "RU7" [58.0 22.87] 0 1000 0)
(bank "-2" 180)
(plane-move "-2" 0.1)
(bank "-2" 0)
(kk 0 14 09)
(exit)
(start-server)
(kk 0 14 11)
(exit)
(start-server)
(kk 0 16 47)
(rete/facts 'FlightPlan)
(kk 0 17 24)
(kk 2 17 24)
(exit)
(start-server)
(kk 0 17 27)
(kt 0 17 28)
(rete/facts 'FlightPlan)
(exit)
(start-server)
(kk 0 21 34)
(exit)
(start-server)
(kk 0 21 41)
(exit)
(start-server)
(kk 0 22 01)
(kt 0 22 04)
(start-server)
(kt 0 21 31)
(rete/facts 'FlightPlane)
(rete/facts 'FlightPlan)
(kt 0 22 37)
(rete/facts 'FlightPlan)
(kt 0 22 42)
(kt 2 22 46)
(kk 0 22 51)
(rete/facts 'FlightPlan)
(rete/log-lst "beta-net-plan.txt" rete/BPLAN)
(start-server)
(load-file "src/clj/rete4flight/core.clj")
(turn-end-point [58.9963 22.8243] 220 330 190)
(load-file "src/clj/rete4flight/core.clj")
(turn-end-point [58.9963 22.8243] 220 330 190)
(turn-end-point [58.9963 22.8243] 220 330 140)
(load-file "src/clj/rete4flight/core.clj")
(turn-end-point [58.9963 22.8243] 220 330 190)
(turn-end-point [58.9963 22.8243] 220 330 140)
(load-file "src/clj/rete4flight/core.clj")
(turn-end-point [58.9963 22.8243] 220 330 140)
(start-server)
(kk 0 10 42)
(kk 1 10 45)
(exit)
(start-server)
(kk 0 10 48)
(kt 0 10 51)
(rete/facts 'FlightPlan)
(rete/log-lst "beta-net-plan.txt" rete/BPLAN)
(kk 5 11 24)
(exit)
(start-server)
(kk 5 11 26)
(exit)
(start-server)
(kk 7 11 47)
(rete/facts 'FlightPlan)
(exit)
(start-server)
(kk 8 12 9)
(kt 2 12 15)
(rete/facts 'FlightPlan)
(exit)
(start-server)
(kk 9 12 33)
(kt 3 12 36)
(rete/facts 'FlightPlan)
(load-file "src/clj/rete4flight/geo.clj")
(set-param! "-1" :coord [58.9960 22.7541])
(rete/facts 'FlightPlan)
(set-param! "-1" :coord [58.9794 22.7520])
(exit)
(start-server)
(kk 10 12 58)
(rete/facts 'FlightPlan)
(exit)
(start-server)
(k0 0 13 17)
(kk 0 13 21)
(rete/facts 'FlightPlan)
(exit)
(start-server)
(kk 0 13 42)
(start-server)
(kk 0 16 26)
(kt 0 16 29)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(rand 5)
(int (rand 5))
(start-server)
(kk 0 19 18)
(kk 1 19 18)
(kt 1 19 20)
(kk 2 19 20)
(kk 3 19 22)
(kt 2 19 22)
(kk 4 19 24)
(kt 3 19 25)
(start-server)
(def STAT-INTL 20000)
(exit)
(start-server)
(exit)
(start-server)
(rete/log-lst "beta-net-plan.txt" rete/BPLAN)
(exit)
(start-server)
(follow-id {:id "-2"})
(follow-id {:id "-4"})
(start-server)
@cz/CAM
(id-by-call "JBU746")
(exit)
(start-server)
@cz/CAM
(start-server)
@cz/CAM
(exit)
(start-server)
@cz/CAM
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
@cz/CAM
@
)
@cz/SSE
(cz/events)
@cz/SSE
@cz/CAM
(exit)
(start-server)
@cz/CAM
(exit)
(start-server)
@cz/CAM
(exit)
(start-server)
(exit)
(start-server)
(exit)
(start-server)
(rete/facts)
(exit)
(start-server)
(exit)
(start-server)
(exit)
